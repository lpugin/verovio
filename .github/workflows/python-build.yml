name: Python Build

on:
  workflow_dispatch: # manual trigger
  push:
    # Trigger the workflow on push,
    # but only for the branches specified
    branches:
      # Push events on develop branch
      - ci-test

jobs:
  build_wheels:
    name: Build wheels (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.win }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
        python-version: [3.7] # [2.7, 3.5, 3.6, 3.7, 3.8]
        win: [false]
        exclude:
          - os: macos-latest
            python-version: 2.7
        include:
          - python-version: 3.7
            os: windows-latest
            win: true
        
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
  
      #===============================================#
      - name: Install swig
        if: runner.os == 'Windows'
        run: |
          nuget install swigwintools -Version 4.0.0
          nuget install vcpython27 -f -y
        
      - name: Install swig
        if: runner.os == 'macOS'
        run: brew install swig
    
      - name: Install swig
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -q
          sudo apt-get install swig
      #===============================================#
      
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          
       #===============================================#
      - name: Build wheels
        working-directory: bindings/python
        run: |
          python setup.py bdist_wheel
 
      - name: "List result"
        run: ls -l bindings/python/dist
      - name: "Check with Twine"
        run: python -m twine check bindings/python/dist/*
 
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-python-${{ matrix.python-version }}
          path: bindings/python/dist/*.whl
  
  build_sdist:
    name: Build sdist (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
  
      #===============================================#
      - name: Install swig
        if: runner.os == 'Windows'
        run: |
          nuget install swigwintools -Version 4.0.0
          nuget install vcpython27 -f -y
        
      - name: Install swig
        if: runner.os == 'macOS'
        run: brew install swig
    
      - name: Install swig
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -q
          sudo apt-get install swig
      #===============================================#
      
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          
       #===============================================#
      - name: Build source distribution
        working-directory: bindings/python
        run: python setup.py sdist
 
      - name: "List result"
        run: ls -l bindings/python/dist
      - name: "Check with Twine"
        run: python -m twine check bindings/python/dist/*
 
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-sdist-python-${{ matrix.python-version }}
          path: bindings/python/dist/*.tar.gz
          
