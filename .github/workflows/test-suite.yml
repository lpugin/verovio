name: Verovio CI Test Suite

on:
  # pull_request:
  #  branches: develop
  # TODO: run this task only on PR in production; use push event for testing
  push:
    branches:
      - '**'

# globals
env:
  # gh-pages
  GH_PAGES_REPO: ${{ github.repository_owner }}/verovio.org
  GH_PAGES_BRANCH: gh-pages

  # build artifacts
  TEST_BUILD: test-build

  # temporary directories
  GH_PAGES_DIR: gh-pages
  TEMP_DIR: temp


jobs:
  test:
    name: Run Verovio test suite
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v2

      - name: Checkout GH_PAGES_BRANCH into GH_PAGES_DIR
        uses: actions/checkout@v2
        with:
          repository: ${{ env.GH_PAGES_REPO }}
          ref: ${{ env.GH_PAGES_BRANCH }}
          path: ${{ env.GH_PAGES_DIR }}

      - name: Verify
        run: |
          pwd
          ls -al
          ls -R

      - name: Find tests
        env:
          TEST_DIR: ${{ github.workspace }}/${{env.GH_PAGES_DIR}}/_tests
        run: |
          cd $TEST_DIR
          ls -al

          for testcategory in $TEST_DIR/*; do
            if [ -d "$testcategory" ]; then
              echo "********"
              echo $testcategory

              if [ "$testcategory" == "*/ligature" ] ; then echo "Found ligature" ; fi

              for testfile in $testcategory/*.mei; do echo $testfile; done
            else
              echo "### No test file here..."
            fi

          done

#      - name: Run make
#        working-directory: ${{ github.workspace }}/tools
#        run: |
#          cmake ../cmake
#          make -j8
#
#      - name: Run tests
#        env:
#          TEST_DIR: ${{ github.workspace }}/${{env.GH_PAGES_DIR}}/_tests
#        working-directory: ${{ github.workspace }}/tools
#        run: |
#          mkdir -p $GITHUB_WORKSPACE/$TEMP_DIR
#
#          for testcategory in $TEST_DIR/*; do
#            if [ -d "$testcategory" ]; then
#              echo "********"
#              echo $testcategory
#
#              if [ "$testcategory" == */ligature ] ; then echo "Found ligature" ; fi
#
#              echo "* Creating SVG files..."
#              for testfile in $testcategory/*.mei; do
#                if [ -f "$testfile" ]; then
#                  ./verovio -r ../data/ $testfile --breaks none --adjust-page-height --scale 50
#                else
#                  echo "### No test file here..."
#                fi
#              done
#
#              echo "* Creating MEI files..."
#              for testfile in $testcategory/*.mei; do
#                if [ -f "$testfile" ]; then
#                  ./verovio -r ../data/ -t mei --remove-ids --all-pages $testfile
#                else
#                  echo "### No test file here..."
#                fi
#              done
#
#              echo "* Copying SVG files..."
#              if [ -f "$testcategory/*.svg" ]; then
#                mv $testcategory/*.svg $GITHUB_WORKSPACE/$TEMP_DIR;
#              else
#                echo "### No svg output to copy here..."
#              fi
#            else
#              echo "### No test category here..."
#            fi
#          done
#
#      - name: Verify
#        working-directory: ${{ github.WORKSPACE }}/${{ env.TEMP_DIR }}
#        run: |
#          pwd
#          ls -al

