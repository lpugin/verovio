name: Verovio CI Test Suite

on:
  # pull_request:
  #  branches: develop
  # TODO: run this task only on PR in production; use push event for testing
  push:
    branches:
      - '**'

# globals
env:
  # develop
  DEVELOP_BRANCH: develop
  DEVELOP_DIR: develop-dir

  # gh-pages
  GH_PAGES_REPO: ${{ github.repository_owner }}/verovio.org
  GH_PAGES_BRANCH: gh-pages

  # build artifacts
  TEST_BUILD: test-build

  # temporary directories
  PR_DIR: pr-${{ github.event.pull_request.head.sha }}
  GH_PAGES_DIR: gh-pages-dir
  TEMP_DIR: temp-dir


jobs:
  cache_tests:
    name: Cache Tests
    runs-on: ubuntu-20.04
    steps: 
      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          # path for cache
          path: ${{ env.GH_PAGES_DIR }}-${{ github.run_id }}
          # key for cache
          key: ${{ runner.os }}-gh-pages-${{ github.run_id }}
      
      - name: Checkout GH_PAGES_BRANCH into GH_PAGES_DIR
        if: steps.cache_tests.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: ${{ env.GH_PAGES_REPO }}
          ref: ${{ env.GH_PAGES_BRANCH }}
          path: ${{ env.GH_PAGES_DIR }}-${{ github.run_id }}

  build_pr:
    name: Build Pull Request ${{ github.event.pull_request.head.sha }}
    runs-on: ubuntu-20.04
    continue-on-error: true

    steps:
      - name: Checkout PR
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: ${{ env.PR_DIR }}

  build_tests:
    name: Build Verovio Test Suite on ${{ matrix.name }}
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        include: 
          - name: develop
            ref: develop
            path: devlop-dir
          
          - name: PR
            ref: ${{ github.event.pull_request.head.sha }}
            path: pr-${{ github.event.pull_request.head.sha }}

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.ref }}
          path: ${{ matrix.path }}

      - name: Restore cache
        uses: actions/cache@v2
        id: restore_cache
        with:
          # path for cache
          path: ${{ env.GH_PAGES_DIR }}-${{ github.run_id }}
          # key for cache
          key: ${{ runner.os }}-gh-pages-${{ github.run_id }}

      - name: Verify
        run: |
          pwd
          ls -al
          ls -R

      - name: Find tests
        env:
          TEST_DIR: ${{ github.workspace }}/${{env.GH_PAGES_DIR}}/_tests
        working-directory: ${{ env.TEST_DIR }}
        run: |
          pwd
          ls -al

          for testcategory in $TEST_DIR/*; do
            if [ "$testcategory" = "*" ]; then continue; fi   # skip empty directory
            if [ -d "$testcategory" ]; then
              echo "********"
              echo $testcategory

              if [ "$testcategory" == "$TEST_DIR/ligature" ]
              then
                echo "Found ligature"
                # continue
              fi

              for testfile in $testcategory/*.mei; do echo $testfile; done
            else
              echo "### No test file here..."
            fi

          done

      # TODO: Remove
      # Cache verovio build
      - name: Set up cache
        id: cache_build
        uses: actions/cache@v2
        with:
          # path for cache
          path: ${{ github.workspace }}/${{ matrix.path }}/tools/verovio
          # key for cache
          key: ${{ runner.os }}-verovio-build
          # key: ${{ runner.os }}-verovio-build-${{ github.sha }}

      # if no cache is found, build verovio
      - name: Run make
        if: steps.cache_build.outputs.cache-hit != 'true'
        working-directory: ${{ github.workspace }}/${{ matrix.path }}/tools
        run: |
          cmake ../cmake
          make -j8

      - name: Create temp dir
        working-directory: ${{ github.workspace }}/${{ matrix.path }}
        run: |
          mkdir -p $TEMP_DIR/

      # run the test suite
      - name: Run tests
        env:
          TEST_DIR: ${{ github.workspace }}/${{env.GH_PAGES_DIR}}/_tests
          OUTPUT_DIR: ${{ github.workspace }}/${{ matrix.path }}/${{ env.TEMP_DIR }}
        working-directory: ${{ github.workspace }}/${{ matrix.path }}/tools
        run: |
          for testcategory in $TEST_DIR/*; do
            # skip empty directory
            if [ "$testcategory" = "*" ]; then continue; fi

            if [ -d "$testcategory" ]; then
              echo "********"
              echo $testcategory

              echo "* Creating SVG files..."
              for testfile in $testcategory/*.mei; do
                if [ -f "$testfile" ]; then
                  ./verovio -r ../data/ $testfile --breaks none --adjust-page-height --scale 50
                else
                  echo "### No test file here..."
                fi
              done

              echo "* Creating MEI files..."
              for testfile in $testcategory/*.mei; do
                if [ -f "$testfile" ]; then
                  ./verovio -r ../data/ -t mei --remove-ids --all-pages $testfile
                else
                  echo "### No test file here..."
                fi
              done

              echo "* Copying SVG files..."
              count=$(ls -1 $testcategory/*.svg 2>/dev/null | wc -l)
              if [ "$count" != 0 ]; then
                mv $testcategory/*.svg $OUTPUT_DIR;
              else
                echo "### No svg output to copy here..."
              fi
            else
              echo "### No test category here..."
            fi
          done

      - name: Upload test artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_BUILD }}-${{ matrix.name }}
          path: ${{ github.workspace }}/${{ matrix.path }}/${{ env.TEMP_DIR }}

      - name: Verify
        working-directory: ${{ github.workspace }}/${{ matrix.path }}/${{ env.TEMP_DIR }}
        run: |
          pwd

          count=$(ls -1 *.svg 2>/dev/null | wc -l)
          echo "Found $count SVG files"

          ls -al

      - name: Check git status
        working-directory: ${{ github.workspace }}/${{ matrix.path }}
        run: |
          git config --get remote.origin.url
          git status

          echo "-------"
          git diff --cached

      - uses: lots0logs/gh-action-get-changed-files@2.1.4
        id: get_changed_files
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Echo changed files
        run: | 
          echo "all: ${{ steps.get_changed_files.outputs.all }}"
          echo "added: ${{ steps.get_changed_files.outputs.added }}"
          echo "modified: ${{ steps.get_changed_files.outputs.modified }}"
          echo "deleted: ${{ steps.get_changed_files.outputs.deleted }}"
          echo "renamed: ${{ steps.get_changed_files.outputs.renamed }}"
      
      - name: Read changed files
        id: read_changes
        uses: komorebitech/read-files-action@v1.5
        with:
          files: "${{ steps.get_changed_files.outputs.modified }}"
          pattern: '*'
      
      - name: Echo changes
        run: echo "${{ steps.read_changes.outputs.content }}"