name: Verovio CI Build

on:
  push:
    # Trigger the workflow on push,
    # but only for the branches specified
    branches:
      # Push events on develop branch
      - develop
      # Push events on ci-test branch (only needed for testing purposes)
      - ci-test
      # Push events on travis-test branch (only needed for testing purposes)
      - travis-test

# globals
env:
  # build artifacts
  CLI_BUILD: cli-build
  DOC_BUILD: doc-build
  TOOLKIT_BUILD: toolkit-build

  # doxygen
  DOXYGEN_REPO: ${{ github.repository_owner }}/verovio-doxygen # works also for forks of verovio
  DOXYGEN_BRANCH: master

  # emscripten
  EMSCRIPTEN_VERSION: latest
  EMSCRIPTEN_CACHE_FOLDER: emsdk-cache

  # gh-pages
  GH_PAGES_REPO: ${{ github.repository_owner }}/verovio.org # works also for forks of verovio
  GH_PAGES_BRANCH: gh-pages

  # temporary directories
  DOXYGEN_DIR: doxygen-dir
  GH_PAGES_DIR: gh-pages-dir
  TEMP_DIR: temp-dir


jobs:

  ###################################
  # Build the doxygen documentation #
  ###################################
  build_docs:
    name: Build documentation
    runs-on: ubuntu-20.04
    # run deployment only after finishing the build jobs
    # needs: [build_cpp, build_cli, build_js]

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v2

      - name: Install doxygen
        run: |
          sudo apt-get update -q
          sudo apt-get install -y --no-install-recommends doxygen

      - name: Check installation
        run: |
          doxygen --help

      - name: Upgrade doxygen conf
        working-directory: ${{ github.WORKSPACE }}/doc
        run: (cat verovio.conf) | doxygen -u -

      - name: Check files
        working-directory: ${{ github.WORKSPACE }}/doc
        if: always()
        run: |
          pwd
          ls -al
          ls -R

      - name: Build documentation with (updated) doxygen conf
        working-directory: ${{ github.WORKSPACE }}/doc
        if: ${{ success() }}
        run: (cat verovio.conf ; echo "OUTPUT_DIRECTORY = $GITHUB_WORKSPACE/$DOXYGEN_DIR") | doxygen -u -

      - name: Upload doxygen build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.DOC_BUILD }}
          path: ${{ github.workspace }}/${{ env.DOXYGEN_DIR }}

      - name: Check files
        working-directory: ${{ github.WORKSPACE }}/${{ env.DOXYGEN_DIR }}
        if: always()
        run: |
          pwd
          ls -al
          ls -R


  ###############################################
  # Deploy the documentation to verovio-doxygen #
  ###############################################
  deploy_docs:
    name: Deploy documentation
    runs-on: ubuntu-20.04
    # run deployment only after finishing the build jobs
    needs: [build_docs]

    steps:
      - name: Checkout DOXYGEN_REPO into DOXYGEN_DIR
        uses: actions/checkout@v2
        with:
          repository: ${{ env.DOXYGEN_REPO }}
          ssh-key: ${{ secrets.GH_ACTIONS_DEPLOY_KEY_DOXYGEN }}
          ref: ${{ env.DOXYGEN_BRANCH }}
          path: ${{ env.DOXYGEN_DIR }}

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.DOC_BUILD }}
          path: artifacts/${{ env.DOC_BUILD }}

      - name: Check files
        working-directory: ${{ github.WORKSPACE }}
        if: always()
        run: |
          cd $DOXYGEN_DIR/
          pwd
          ls -al

          cd ../artifacts/
          pwd
          ls -al
          ls -R


      - name: Copy build artifacts to DOXYGEN_DIR
        run: |
         cp -a artifacts/$DOC_BUILD/* $DOXYGEN_DIR/

      - name: Check git status before commit
        working-directory: ${{ env.DOXYGEN_DIR }}
        run: |
          git config --get remote.origin.url
          git status

      - name: Configure git
        working-directory: ${{ env.DOXYGEN_DIR }}
        run: |
          echo "Configuring git"
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

      - name: Commit files
        working-directory: ${{ env.DOXYGEN_DIR }}
        run: |
          echo "Running git commit"
          git add .
          git commit -m "Auto-commit of documentation build for ${{ github.repository }}@${{ github.sha }}"

#      - name: Check git status after commit
#        working-directory: ${{ env.DOXYGEN_DIR }}
#        run: |
#          git config --get remote.origin.url
#          git status

      - name: Push changes to doxygen
        working-directory: ${{ env.DOXYGEN_DIR }}
        run: |
          # Push all changes in one commit to the doxygen repo
          echo "Build branch ready to go. Pushing to Github..."

          git push -v --dry-run origin HEAD:$DOXYGEN_BRANCH

      - name: Congratulations
        if: ${{ success() }}
        run: |
          echo "ðŸŽ‰ Documentation deployed ðŸŽŠ"
